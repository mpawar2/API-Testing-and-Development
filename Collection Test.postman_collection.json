{
	"info": {
		"_postman_id": "f2302f96-c43a-4e07-b680-85819178c97b",
		"name": "Collection Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4916973"
	},
	"item": [
		{
			"name": "final check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{submission}}",
					"host": [
						"{{submission}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get fiction books",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books?genre=fiction&checkedOut=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "genre",
							"value": "fiction"
						},
						{
							"key": "checkedOut",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get book by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "29cd820f-82f9-4b45-a7f4-0924111b5b89"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// save the \"id\" value from the response to a variable named \"id\"\r",
							"const id = pm.response.json().id\r",
							"// save the id as a collection variable named \"id\"\r",
							"pm.collectionVariables.set(\"id\", id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "api-key",
						"value": "postmanrulz",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Postman Overview with implementation\",\r\n  \"author\": \"Mayuri\",\r\n  \"genre\": \"Nonfiction\",\r\n  \"yearPublished\": 2024\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 424\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(424);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - status, message, and errors\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.status).to.exist;\r",
							"  pm.expect(responseData.message).to.exist;\r",
							"  pm.expect(responseData.errors).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Errors array is present and contains expected number of elements\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.errors).to.exist.and.to.be.an('array');\r",
							"    pm.expect(responseData.errors).to.have.lengthOf(1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Errors array should have valid 'test' and 'message' fields format\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.errors).to.be.an('array').that.is.not.empty;\r",
							"    \r",
							"    responseData.errors.forEach(function(error) {\r",
							"        pm.expect(error.test).to.be.a('string');\r",
							"        pm.expect(error.message).to.be.a('string');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"mayuripwr28@gmail.com\",\r\n  \"postmanCollectionJsonUrl\": \"{{submission}}\",\r\n  \"publishedCourseId\": \"2q2jokzsn62y8\",\r\n  \"lessonId\": \"go6mgkytvk8u\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://lesson-completion.postmanlabs.com/submit?genre=fiction&checkedOut=false",
					"protocol": "https",
					"host": [
						"lesson-completion",
						"postmanlabs",
						"com"
					],
					"path": [
						"submit"
					],
					"query": [
						{
							"key": "genre",
							"value": "fiction"
						},
						{
							"key": "checkedOut",
							"value": "false"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "postmanrulz",
				"type": "string"
			},
			{
				"key": "key",
				"value": "api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://library-api.postmanlabs.com"
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "submission",
			"value": "https://api.postman.com/collections/4916973-4bbb05fb-60e1-4538-87a8-75ef62c92f71?access_key=PMAT-01JBC9X07BXZQ1KTHNRJ6M7F9R",
			"type": "string"
		}
	]
}